def max_sum_of_distinct_subarrays(nums, k):
    if len(nums) < k:
        return 0

    max_sum, current_sum, window_start = 0, 0, 0
    num_set = set()

    for window_end in range(len(nums)):
        while nums[window_end] in num_set:
            num_set.remove(nums[window_start])
            current_sum -= nums[window_start]
            window_start += 1

        num_set.add(nums[window_end])
        current_sum += nums[window_end]

        if window_end - window_start + 1 == k:
            max_sum = max(max_sum, current_sum)
            num_set.remove(nums[window_start])
            current_sum -= nums[window_start]
            window_start += 1

    return max_sum
nums = [1, 5, 4, 2, 9, 9, 9]
k = 3
print(max_sum_of_distinct_subarrays(nums, k))
