def bubble_sort(nums):
    n = len(nums)
    for i in range(n):
        # Initialize a flag to check if any swaps were made
        swapped = False
        # Traverse the array from 0 to n-i-1
        for j in range(0, n-i-1):
            # Swap if the element found is greater than the next element
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]
                swapped = True
        # If no elements were swapped, the list is sorted
        if not swapped:
            break
    return nums

# Test cases
print(bubble_sort([]))  # Expected Output: []
print(bubble_sort([1]))  # Expected Output: [1]
print(bubble_sort([7, 7, 7, 7]))  # Expected Output: [7, 7, 7, 7]
print(bubble_sort([-5, -1, -3, -2, -4]))  # Expected Output: [-5, -4, -3, -2, -1]
print(bubble_sort([5, 2, 9, 1, 5, 6]))  # Expected Output: [1, 2, 5, 5, 6, 9]
print(bubble_sort([10, 8, 6, 4, 2]))  # Expected Output: [2, 4, 6, 8, 10]
print(bubble_sort([1, 2, 3, 4, 5]))  # Expected Output: [1, 2, 3, 4, 5]
def bubble_sort(nums):
    n = len(nums)
    for i in range(n):
        # Initialize a flag to check if any swaps were made
        swapped = False
        # Traverse the array from 0 to n-i-1
        for j in range(0, n-i-1):
            # Swap if the element found is greater than the next element
            if nums[j] > nums[j+1]:
                nums[j], nums[j+1] = nums[j+1], nums[j]
                swapped = True
        # If no elements were swapped, the list is sorted
        if not swapped:
            break
    return nums

# Test cases
print(bubble_sort([]))  # Expected Output: []
print(bubble_sort([1]))  # Expected Output: [1]
print(bubble_sort([7, 7, 7, 7]))  # Expected Output: [7, 7, 7, 7]
print(bubble_sort([-5, -1, -3, -2, -4]))  # Expected Output: [-5, -4, -3, -2, -1]
print(bubble_sort([5, 2, 9, 1, 5, 6]))  # Expected Output: [1, 2, 5, 5, 6, 9]
print(bubble_sort([10, 8, 6, 4, 2]))  # Expected Output: [2, 4, 6, 8, 10]
print(bubble_sort([1, 2, 3, 4, 5]))  # Expected Output: [1, 2,
