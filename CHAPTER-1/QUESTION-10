def merge_sort(nums):
    if len(nums) <= 1:
        return nums
    
    # Divide the array into two halves
    mid = len(nums) // 2
    left_half = merge_sort(nums[:mid])
    right_half = merge_sort(nums[mid:])
    
    # Merge the sorted halves
    sorted_nums = merge(left_half, right_half)
    return sorted_nums

def merge(left, right):
    sorted_nums = []
    i = j = 0
    
    while i < len(left) and j < len(right):
        if left[i] <= right[j]:
            sorted_nums.append(left[i])
            i += 1
        else:
            sorted_nums.append(right[j])
            j += 1
    
    # Append remaining elements
    sorted_nums.extend(left[i:])
    sorted_nums.extend(right[j:])
    
    return sorted_nums

# Test case
nums = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5]
sorted_nums = merge_sort(nums)
print(sorted_nums)  # Output: [1, 1, 2, 3, 3, 4, 5, 5, 5, 6, 9]
