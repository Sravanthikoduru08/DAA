def rob(nums):
    if not nums:
        return 0
    if len(nums) == 1:
        return nums[0]
    
    # Helper function to calculate maximum money without triggering alarms
    def rob_helper(nums):
        if not nums:
            return 0
        if len(nums) == 1:
            return nums[0]
        
        n = len(nums)
        dp = [0] * n
        dp[0] = nums[0]
        dp[1] = max(nums[0], nums[1])
        
        for i in range(2, n):
            dp[i] = max(dp[i-1], nums[i] + dp[i-2])
        
        return dp[-1]
    
    # Case 1: Rob from first house to second last house
    max_money1 = rob_helper(nums[:-1])
    
    # Case 2: Rob from second house to last house
    max_money2 = rob_helper(nums[1:])
    
    # Return the maximum of the two cases
    return max(max_money1, max_money2)

# Test cases
nums1 = [2, 3, 2]
nums2 = [1, 2, 3, 1]

print("Maximum money you can rob without alerting the police (Example 1):", rob(nums1))  # Output: 3
print("Maximum money you can rob without alerting the police (Example 2):", rob(nums2))  # Output: 4
